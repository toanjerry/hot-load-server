class HotClient{constructor(e){this.server=e}setOpts(e={}){return this.opts={...this.opts,...e},this}connect(){try{this.ws=new WebSocket(this.server),this.setupEvent()}catch(e){console.error(`HOT: Failed to connect ${this.server}`,e),this.opts.reconnectInterval&&setTimeout(()=>this.connect(),this.opts.reconnectInterval)}}setupEvent(){this.ws.addEventListener("open",()=>{this.ws.send(JSON.stringify({type:"register",app:HMR.location.app,origin:HMR.location.origin,domain:HMR.location.domain})),console.log("HOT: connected")}),this.ws.addEventListener("close",()=>{this.opts.reconnectInterval&&setTimeout(()=>this.connect(),this.opts.reconnectInterval),console.log("HOT: disconnected")}),this.ws.addEventListener("message",e=>{const t=JSON.parse(e.data);if("change"===t.type){HMR.overlay();try{HotEngine.process(t.changes||[]),HMR.engine&&HMR.engine.process(t.changes||[])}catch(e){console.error("HOT: Fail to process message",e),HMR.overlay(e,t)}}else"config"===t.type?HMR.setOpts(t.opts).init():console.info(t)})}}const HMR=new function(){this.connect=async function(e,t){this.detectLocation(),this.server=`${this.location.protocol}//${e}:${t}`,this.initClient()},this.setOpts=function(e){return this.opts=e||{},this},this.initClient=async function(){this.client||(this.client=new HotClient(this.server),this.client.setOpts({reconnectInterval:3e3}).connect())},this.init=()=>{this.initEngine(),this.opts.overlay&&this.initOverlay()},this.initEngine=async function(e=!1){if(this.engine&&!e)return;this.opts?.engine||(this.opts.engine="default");const t=document.createElement("script");t.src=`${this.server}/engine/${this.opts.engine}.js`,t.onload=()=>{},t.onerror=e=>{console.error(`HOT: Failed to load engine ${this.opts.engine}`,e)},document.body.appendChild(t)},this.detectLocation=()=>{this.location={app:window?.Client?.base?.app||"hot",domain:window?.Client?.domain||window.location.host,protocol:window.location.protocol,host:window.location.host,port:window.location.port,origin:window.location.origin}},this.overlay=function(e="",t){if(!this.opts.overlay)return;const n=document.getElementById("hmr-overlay");e?(delete t.js,delete t.css,document.getElementById("hmr-overlay-content").innerText=e+"\n"+JSON.stringify(t),n.style.display="flex"):n.style.display="none"},this.initOverlay=()=>{let e=document.getElementById("hmr-overlay");if(e)return;e=document.createElement("div"),e.id="hmr-overlay",e.style.position="fixed",e.style.top=0,e.style.left=0,e.style.width="100vw",e.style.height="100vh",e.style.background="rgba(0,0,0,0.7)",e.style.alignItems="center",e.style.justifyContent="center",e.style.zIndex=99999,e.style.display="none";const t=document.createElement("div");t.id="hmr-overlay-content",t.style.background="#fff",t.style.padding="2rem",t.style.boxShadow="0 2px 16px rgba(0,0,0,0.2)",t.style.color="red",e.appendChild(t),document.body.appendChild(e)}},HotEngine=new function(){this.REFRESH="refresh",this.REFRESH_X="refresh-x",this.REFRESH_JS="refresh-js",this.REFRESH_CSS="refresh-css",this.UPDATE_JS="update-js",this.UPDATE_CSS="update-css",this.process=e=>{for(const t of e){if(t.action===HotEngine.REFRESH)return window.location.reload();t.action===HotEngine.REFRESH_JS?this.refreshJS(t.url,t.pattern):t.action===HotEngine.REFRESH_CSS&&this.refreshCSS(t.url,t.pattern)}},this.create=e=>{HMR||console.err("HOT: HMR isnot loaded"),HMR.engine=e,HMR.client.setOpts(HMR.engine.opts),console.log(`HOT: Engine "${e.name||""}" is loaded`)},this.getCSSTargets=(e,t)=>{e&&(e=e.split(/[\\/]/).join("/"),t=null);const n=t?new RegExp(t):null;return Array.from(document.getElementsByTagName("link")).filter(t=>!("stylesheet"!==t.rel||!t.href)&&(e===t.href||!!n&&n.test(t.href)))},this.getJSTargets=(e,t)=>{e&&(e=e.split(/[\\/]/).join("/"),t=null);const n=t?new RegExp(t):null;return Array.from(document.getElementsByTagName("script")).filter(t=>!!t.src&&(e===t.src||!!n&&n.test(t.src)))},this.refreshJS=(e,t)=>{const n=this.getJSTargets(e,t);n&&n.length&&n.forEach(e=>{const t=document.createElement("script");t.src=e.src,t.async=e.async,t.defer=e.defer,e.parentNode.insertBefore(t,e.nextSibling),e.parentNode.removeChild(e)})},this.refreshCSS=(e,t)=>{const n=this.getCSSTargets(e,t);n&&n.length&&n.forEach(e=>{const t=e.cloneNode();t.href=e.href,e.parentNode.insertBefore(t,e.nextSibling),e.parentNode.removeChild(e)})}};HMR.connect("localhost",3e3);